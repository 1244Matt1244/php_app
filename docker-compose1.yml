version: '3.8'

services:
  php-app:
    build:
      context: .
      args:
        - UID=$(id -u)
        - GID=$(id -g)
    container_name: php-app
    environment:
      - DB_HOST=postgres-db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - APP_KEY=${SECRET_KEY}
    volumes:
      - ./html:/var/www/html:ro
      - php-tmp:/tmp
    networks:
      app-network:
        ipv4_address: 172.${RANDOM_SUBNET}.0.10
    security_opt:
      - no-new-privileges:true
      - seccomp=./seccomp.json
    read_only: true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 512M

  nginx-web:
    image: nginx:1.25-alpine
    container_name: nginx-web
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./html:/var/www/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    cap_drop:
      - NET_RAW
      - SYS_ADMIN

  postgres-db:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres_backups:/backups:ro
    networks:
      app-network:
        ipv4_address: 172.${RANDOM_SUBNET}.0.20
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/postgres_data
  nginx_logs:
  php-tmp:

networks:
  app-network:
    driver: bridge
    internal: true
    attachable: false
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY}

secrets:
  db_password:
    file: ./secrets/db_password.txt
